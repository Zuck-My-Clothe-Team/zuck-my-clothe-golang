basePath: /
definitions:
  model.AuthenDetial:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/model.Roles'
      surname:
        type: string
      user_id:
        type: string
    type: object
  model.AuthenPayload:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.Roles'
      user_id:
        type: string
    type: object
  model.AuthenResponse:
    properties:
      data:
        $ref: '#/definitions/model.AuthenDetial'
      token:
        type: string
    type: object
  model.RequestBody:
    properties:
      accessToken:
        type: string
    type: object
  model.Roles:
    enum:
    - SuperAdmin
    - BranchManager
    - Employee
    - Client
    type: string
    x-enum-varnames:
    - SuperAdmin
    - BranchManager
    - Employee
    - Client
  model.Users:
    properties:
      created_at:
        type: string
      deleteAt:
        type: string
      email:
        type: string
      firstname:
        type: string
      google_id:
        type: string
      lastname:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/model.Roles'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
host: zuck-my-clothe-api.sokungz.work
info:
  contact: {}
  description: This is API document for Zuck-my-clothe API
  title: Zuck-my-clothe API
  version: "1.0"
paths:
  /auth/google/callback:
    post:
      consumes:
      - application/json
      description: Handle Google OAuth2 callback and log in or create a user
      parameters:
      - description: Google OAuth2 Request Body
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/model.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthenResponse'
        "204":
          description: User Data Fetch Failed
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Google OAuth2 Callback
      tags:
      - Authentication
  /auth/me:
    get:
      consumes:
      - application/json
      description: handle user data extraction and token expiration check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthenResponse'
        "204":
          description: User Data Fetch Failed
          schema:
            type: string
        "401":
          description: token expired
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Extract User Data from JWT token
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user by using User model
      parameters:
      - description: New User Data
        in: body
        name: UserModel
        required: true
        schema:
          $ref: '#/definitions/model.Users'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "403":
          description: Forbidden
          schema:
            type: string
        "406":
          description: Not Acceptable
          schema:
            type: string
      summary: Create new user
      tags:
      - User Controller
  /signin:
    post:
      consumes:
      - application/json
      description: Sign in user with credentials
      parameters:
      - description: Authentication Payload
        in: body
        name: authenPayload
        required: true
        schema:
          $ref: '#/definitions/model.AuthenPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthenResponse'
        "400":
          description: Missing body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Sign in to the application
      tags:
      - Authentication
  /testrout:
    get:
      consumes:
      - application/json
      description: Returns a simple message to verify the endpoint.
      produces:
      - text/plain
      responses:
        "200":
          description: Gu Hum Yaii
          schema:
            type: string
      summary: Test Controller
      tags:
      - Test
schemes:
- https
swagger: "2.0"
